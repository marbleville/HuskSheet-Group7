# Docker Compose file to set up all of the docker instances
#
# @author hunterbrodie

services:
    db:
        image: mysql
        restart: always
        ports:
            - "3306:3306"
        volumes:
            - "/var/lib/mysql"
            - "./db-scripts/setup.sql:/docker-entrypoint-initdb.d/1.sql"
            - "./db-scripts/dev.sql:/docker-entrypoint-initdb.d/2.sql"
            - "./db-scripts/testing.sql:/docker-entrypoint-initdb.d/3.sql"
        environment:
            - MYSQL_ROOT_PASSWORD=password
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 5s
            retries: 10
        logging:
            driver: none


    express:
        image: node
        container_name: express
        ports:
            - 3000:3000
        volumes:
            - "./server:/server"
            - "/server/node_modules"
            - "./types:/types"
        command: bash -c "npm install --prefix /server && npm run dev --prefix /server"
        links:
            - "db:db"
        env_file:
            - "./config/db.dev.env"
        logging:
            driver: none

    express-test:
        image: node
        container_name: express-test
        volumes:
            - "./server:/server"
            - "/server/node_modules"
            - "./types:/types"
        command: bash -c "npm install --prefix /server && npm run dev --prefix /server"
        links:
            - "db:db"
        env_file:
            - "./config/db.test.env"
        logging:
            driver: none

    testing:
        build: .
        container_name: testing
        volumes:
            - "./:/app"
        command: bash -c "/app/db-scripts/store-proc.sh"
        links:
            - "db:db"
            - "express-test:express"
        env_file:
            - "./config/db.test.env"
        depends_on:
            db:
                condition: service_healthy

    frontend:
        image: node
        container_name: frontend
        volumes:
            - "./client:/client"
            - "/client/node_modules"
            - "./react.sh:/start.sh"
        ports:
            - 5173:5173
        stdin_open: true
        environment:
            - CHOKIDAR_USEPOLLING=true
            - "ENDPOINT=${ENDPOINT}"
        command: bash -c "/start.sh"
        links:
            - "express:express"
